[{"C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\index.js":"1","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\reportWebVitals.js":"2","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\App.js":"3","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\utils\\DataApi.js":"4","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\HomePage.js":"5","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\Router\\Routes.js":"6","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\FileManager.js":"7","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\CapturedImageView.js":"8","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\PhotosSelect.js":"9","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\FileManagerMobile.js":"10","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\ShareScreen.js":"11","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\MobileCameraCapture.js":"12","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\RecordVideoMobile.js":"13","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\ShareMobile.js":"14","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\Review.js":"15","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\SlideShow.js":"16","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\RecordVideo.js":"17","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\CaptureImage.js":"18","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\TextError.js":"19"},{"size":605,"mtime":1611743490000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611743490000,"results":"22","hashOfConfig":"21"},{"size":4618,"mtime":1611743490000,"results":"23","hashOfConfig":"21"},{"size":109,"mtime":1611743490000,"results":"24","hashOfConfig":"21"},{"size":1489,"mtime":1611743490000,"results":"25","hashOfConfig":"21"},{"size":755,"mtime":1611743490000,"results":"26","hashOfConfig":"21"},{"size":4567,"mtime":1611743490000,"results":"27","hashOfConfig":"21"},{"size":3408,"mtime":1611743490000,"results":"28","hashOfConfig":"21"},{"size":4758,"mtime":1611743490000,"results":"29","hashOfConfig":"21"},{"size":5147,"mtime":1611743490000,"results":"30","hashOfConfig":"21"},{"size":2151,"mtime":1611743490000,"results":"31","hashOfConfig":"21"},{"size":2860,"mtime":1611743490000,"results":"32","hashOfConfig":"21"},{"size":7927,"mtime":1611743490000,"results":"33","hashOfConfig":"21"},{"size":4518,"mtime":1611743490000,"results":"34","hashOfConfig":"21"},{"size":14906,"mtime":1611833293725,"results":"35","hashOfConfig":"21"},{"size":3586,"mtime":1611743490000,"results":"36","hashOfConfig":"21"},{"size":21500,"mtime":1611841101382,"results":"37","hashOfConfig":"21"},{"size":1133,"mtime":1611743490000,"results":"38","hashOfConfig":"21"},{"size":183,"mtime":1611743490000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1oki5pj",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\index.js",["95"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path='/' component={App} />\n    {/* <App /> */}\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["96","97"],"C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\reportWebVitals.js",[],"C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\App.js",["98","99","100","101","102"],"// import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\n\nimport Routes from './Router/Routes';\n\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport DataApi from './utils/DataApi';\nimport './css/reset.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport FileManager from './components/FileManager';\nimport PhotosSelect from './components/PhotosSelect';\nimport Review from './components/Review';\nimport FileManagerMobile from './components/FileManagerMobile';\nimport CapturedImageView from './components/CapturedImageView';\nimport MobileCameraCapture from './components/MobileCameraCapture';\nimport RecordVideo from './components/RecordVideo';\nimport RecordVideoMobile from './components/RecordVideoMobile';\nimport SlideShow from './components/SlideShow';\nimport ShareScreen from './components/ShareScreen';\nimport ShareMobile from './components/ShareMobile';\nfunction App(props) {\n  // Creating common States\n  const [recordedChunks, setRecordedChunks] = React.useState(null);\n  const [imgArray, setImgArray] = React.useState([]);\n  const [images, setImages] = React.useState([]);\n  const [imageName, setImageName] = useState([]);\n  const [timeArray, setTimeArray] = useState([]);\n  // const [timeArray, setTimeArray] = useState(['00:00:00']);\n\n  // states are for storing the post request Data\n  const [imageForRequest, setImageForRequest] = useState([]);\n  const [imageSlideTime, setImageSlideTime] = useState([]);\n  const [imageNameForRequest, setImageNameForRequest] = useState([]);\n  const [shareUrl, setShareUrl] = useState('');\n  const currentPathname = null;\n  const currentSearch = null;\n  // useEffect(() => {\n  //   const { history } = props;\n\n  //   history.listen((newLocation, action) => {\n  //     if (action === 'PUSH') {\n  //       if (newLocation.pathname !== currentPathname || newLocation.search !== currentSearch) {\n  //         // Save new location\n  //         currentPathname = newLocation.pathname;\n  //         currentSearch = newLocation.search;\n\n  //         // Clone location object and push it to history\n  //         history.push({\n  //           pathname: newLocation.pathname,\n  //           search: newLocation.search,\n  //         });\n  //       }\n  //     } else {\n  //       // Send user back if they try to navigate back\n  //       history.go(1);\n  //     }\n  //   });\n  //   return () => {};\n  // }, []);\n  return (\n    <div>\n      <Router>\n        {/* Data to be used by all the components using React.createContext */}\n        <DataApi.Provider\n          value={{\n            recordedChunks,\n            images,\n            setRecordedChunks,\n            setImages,\n            imgArray,\n            setImgArray,\n            imageName,\n            setImageName,\n            imageSlideTime,\n            setImageSlideTime,\n            timeArray,\n            setTimeArray,\n            imageForRequest,\n            setImageForRequest,\n            imageNameForRequest,\n            setImageNameForRequest,\n            shareUrl,\n            setShareUrl,\n          }}\n        >\n          <Switch>\n            {/* All Routes */}\n            <Route exact path='/' render={() => <Redirect to='/impressent' />} />\n            <Route path='/impressent' exact component={HomePage} />\n            <Route path='/impressent/file' component={FileManager} />\n            <Route path='/impressent/filemob' component={FileManagerMobile} />\n            <Route path='/impressent/photo' component={PhotosSelect} />\n            <Route path='/impressent/video' component={RecordVideo} />\n            <Route path='/impressent/review' component={Review} />\n            <Route path='/impressent/capturedview' component={CapturedImageView} />\n            <Route path='/impressent/mobcapture' component={MobileCameraCapture} />\n            <Route path='/videomob' component={RecordVideoMobile} />\n            <Route path='/impressent/slide' component={SlideShow} />\n            <Route path='/impressent/share' component={ShareScreen} />\n            <Route path='/impressent/sharemob' component={ShareMobile} />\n          </Switch>\n        </DataApi.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n// set HTTPS=true&&npm start\n//  \"start\": \"set HTTPS=true&&react-scripts start\",\n// \"start\": \"react-scripts start\",\n//  \"start\": \"set PORT=8000 && react-scripts start\"\n// C:\\MYPROJECT> SET PORT=8000\n// $ export PORT=8000\n//  \"start\": \"set HTTPS=true&&SSL_CRT_FILE=certssh.pem&&SSL_KEY_FILE=keyssh.pem&&react-scripts start\",\n// REACT_APP_HTTPS=true\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\utils\\DataApi.js",[],"C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\HomePage.js",["103","104","105","106","107","108","109"],"import React, { useEffect, useRef } from 'react';\nimport '../css/homePage.css';\nimport Rectangle9 from '../images/Rectangle 9.svg';\nimport Rectangle1 from '../images/Rectangle 1.svg';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport ImageUploading from 'react-images-uploading';\nimport DataApi from '../utils/DataApi';\n\nfunction HomePage() {\n  useEffect(() => {\n    console.log(process.env);\n    return () => {};\n  }, []);\n  return (\n    <div className='whole_page'>\n      <div className='top_content'>\n        <p className='impressent_top'>impressent</p>\n      </div>\n      <div className='center_page'>\n        <p className='welcome_to'>Welcome to</p>\n        <p className='impressent_center'>impressent</p>\n        <p className='select_slides_center'>Select Slides and Get Started</p>\n        <Link to='/impressent/file' className='link_home'>\n          <p className='proceed_center'>Proceed</p>\n        </Link>\n      </div>\n      <div className='mobile_div'>\n        <div className='mobile_home'>\n          <h2>impre</h2>\n\n          <p className='mob_title'>impressent</p>\n\n          <h2>ssent</h2>\n          <Link to='/impressent/filemob' className='link_home proceed_hide'>\n            <h5 className='proceed_center'>Proceed</h5>\n          </Link>\n        </div>\n        <footer className='mob_footer'>© Copyright 2020</footer>\n      </div>\n\n      <footer className='footer_copy'>© Copyright 2020</footer>\n    </div>\n  );\n}\n\nexport default HomePage;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\Router\\Routes.js",["110","111","112"],"import React from 'react';\nimport HomePage from '../components/HomePage';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PhotosSelect from '../components/PhotosSelect';\nimport FileManager from '../components/FileManager';\nimport RecordVideo from '../components/RecordVideo';\nimport Review from '../components/Review';\nfunction Routes() {\n  return (\n    <div>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/file' component={FileManager} />\n        <Route path='/photo' component={PhotosSelect} />\n        {/* <Route path='/video' component={RecordVideo} /> */}\n        <Route path='/review' component={Review} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default Routes;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\FileManager.js",["113","114","115","116","117"],"import React from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport DataApi from '../utils/DataApi';\nimport Rectangle9 from '../images/Rectangle 9.svg';\nimport VectorAdd from '../images/Vectoradd.svg';\nimport '../css/fileManager.css';\nimport $ from 'jquery';\n\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nclass FileManager extends React.Component {\n  static contextType = DataApi;\n\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n    };\n  }\n\n  // fallback = () => {\n  //   console.log('fallback');\n  //   var selector = $('<ImageUploading/>')\n  //     .attr({\n  //       id: 'FilesSelector' /* just for example, use your own attributes */,\n  //       // name: 'File',\n  //       // type: 'file',\n  //       // contentEditable:\n  //       //   'false' /* if you \"click\" on input via label, this prevents IE7-8 from just setting caret into file input's text filed*/,\n  //     })\n  //     .on('click.filesSelector', function () {\n  //       /* do some magic here, e.g. invoke callback for selection begin */\n  //       var cancelled = false; /* need this because .one calls handler once for each event type */\n  //       setTimeout(function () {\n  //         $(document).one('mousemove.filesSelector focusin.filesSelector', function () {\n  //           /* namespace is optional */\n  //           if (selector.val().length === 0 && !cancelled) {\n  //             cancelled = true; /* prevent double cancel */\n  //             /* that's the point of cancel,   */\n  //             console.log('cancelled');\n  //           }\n  //         });\n  //       }, 1); /* 1 is enough as we just need to delay until first available tick */\n  //     })\n  //     .on('change.filesSelector', function () {\n  //       /* do some magic here, e.g. invoke callback for successful selection */\n  //       console.log('success');\n  //     });\n  //   // .appendTo(yourHolder)\n  //   // .end(); /* just for example */\n  // };\n  componentDidMount() {\n    const element = document.getElementById('myCheck');\n    element.click();\n    console.log(this.context.images);\n    // this.fallback();\n  }\n  render() {\n    const onChange = (imageList, addUpdateIndex) => {\n      // data for submit\n      console.log(imageList, addUpdateIndex);\n      this.context.setImages(imageList);\n      this.setState({ show: false });\n      //   imageList.map((image) =>\n      //   this.context.setImages((prevState) => prevState.concat(image['data_url'])),\n      // );\n      // <Redirect to='photo' />;\n\n      // To redirect to next page\n      const element1 = document.getElementById('link');\n      element1.click();\n    };\n\n    return (\n      <div className='file_layout'>\n        <div className='top_content_file'>\n          <Link to='/impressent' className='redirect_title'>\n            <p className='impressent_top_file'>impressent</p>\n          </Link>\n          <Link to='/impressent' className='link_back'>\n            <p className='back_key'>Go back</p>\n          </Link>\n        </div>\n        {/* For getting the image from the user */}\n        <ImageUploading\n          multiple\n          value={this.context.images}\n          onChange={onChange}\n          // maxNumber={maxNumber}\n          dataURLKey='data_url'\n          className='mt-5'\n          id='FilesSelector'\n        >\n          {({\n            imageList,\n            onImageUpload,\n            onImageRemoveAll,\n            onImageUpdate,\n            onImageRemove,\n            isDragging,\n            dragProps,\n          }) => (\n            // write your building UI\n            <div>\n              <div className='fall_back'>\n                <div>\n                  <h3>You have selected {this.context.images.length} Slides</h3>\n                  <h4>To select slides please click here</h4>\n                </div>\n\n                <button\n                  className='select_img'\n                  style={isDragging ? { color: 'red' } : undefined}\n                  onClick={onImageUpload}\n                  {...dragProps}\n                  id='myCheck'\n                >\n                  <img className='vectorselect' src={VectorAdd} alt=''></img>\n                  <p className='add_p'> Select Images</p>\n                </button>\n              </div>\n            </div>\n          )}\n        </ImageUploading>\n\n        <Link to='/impressent/photo' className='d-none' id='link'></Link>\n        <div className='footer_div'>\n          <footer className='footer_file'>© Copyright 2020</footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileManager;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\CapturedImageView.js",["118","119","120","121","122","123","124","125","126"],"import React, { useState, useEffect } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport DataApi from '../utils/DataApi';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Rectangle1 from '../images/Rectangle 1.svg';\nimport Rectangle9 from '../images/Rectangle 9.svg';\nimport Vector1 from '../images/Vector1.svg';\nimport Vector2 from '../images/Vector2.svg';\nimport Vector3 from '../images/Vector3.svg';\nimport Vector4 from '../images/Vector4.svg';\nimport Vector5 from '../images/Vector5.svg';\nimport VectorAdd from '../images/Vectoradd.svg';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport '../css/captureImageView.css';\nimport CaptureImage from './CaptureImage';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport MobileCameraCapture from './MobileCameraCapture';\nfunction CapturedImageView() {\n  // let img;\n  // Initializing value from create Context\n  const { recordedChunks, images, setRecordedChunks, setImages } = React.useContext(DataApi);\n  console.log('images', images);\n  const [capture, setCapture] = useState(false);\n  const handleCapture = () => {\n    console.log('clicked');\n    setCapture(true);\n  };\n  const deleteHandle = (e, value) => {\n    console.log('delete');\n    var array = [...images]; // make a separate copy of the array\n    var index = array.indexOf(value);\n    if (index !== -1) {\n      array.splice(index, 1);\n      setImages(array);\n    }\n  };\n  useEffect(() => {\n    return () => {};\n  }, []);\n  return (\n    <div>\n      <div className='top_content_photo'>\n        <p className='impressent_top_photo'>impressent</p>\n      </div>\n      <div className='photo_center'>\n        <p className='record_video'>Record Video</p>\n        <div className='vectors'>\n          <img className='vector' src={Vector1} alt=''></img>\n          <img className='vector' src={Vector4} alt=''></img>\n          <img className='vector' src={Vector2} alt=''></img>\n          <img className='vector' src={Vector5} alt=''></img>\n          <img className='vector' src={Vector3} alt=''></img>\n        </div>\n      </div>\n      {capture ? (\n        <div className='camera_capture d-none'>\n          <MobileCameraCapture className='d-none' capture={capture} setCapture={setCapture} />\n        </div>\n      ) : null}\n      (\n      <div className='image_wrapper'>\n        <div className='image_capture'>\n          {images.map((images, index) => (\n            <div key={index} className='image_item_capture'>\n              <img src={images} alt='' height='110' width='171' />\n              <div className='image_item_btn'>\n                <button className='btn_n' onClick={(e) => deleteHandle(e, images)}>\n                  <DeleteOutlineIcon className='btn_icon' />\n                </button>\n              </div>\n            </div>\n          ))}\n          <button className='capture_more' onClick={handleCapture}>\n            <img className='vectoradd_cap' src={VectorAdd} alt=''></img>\n            <p className='add_p'>Capture more</p>\n          </button>\n        </div>\n      </div>\n      )\n      <div className='lower_photo'>\n        <Link to='/video' className={capture ? 'd-none' : 'link'}>\n          <p className='proceed_photo'>Proceed</p>\n        </Link>\n        <footer className={!capture ? 'footer_photo' : 'd-none'}>© Copyright 2020</footer>\n      </div>\n    </div>\n  );\n}\n\nexport default CapturedImageView;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\PhotosSelect.js",["127","128","129","130","131","132","133","134","135","136"],"import React, { useEffect, useRef } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport DataApi from '../utils/DataApi';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Rectangle1 from '../images/Rectangle 1.svg';\nimport Rectangle9 from '../images/Rectangle 9.svg';\nimport Vector1 from '../images/Vector1.svg';\nimport Vector2 from '../images/Vector2.svg';\nimport Vector3 from '../images/Vector3.svg';\nimport Vector4 from '../images/Vector4.svg';\nimport Vector5 from '../images/Vector5.svg';\nimport VectorAdd from '../images/Vectoradd.svg';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport '../css/photoSelect.css';\n\nfunction PhotosSelect() {\n  const { recordedChunks, images, setRecordedChunks, setImages } = React.useContext(DataApi);\n  const onChange = (imageList, addUpdateIndex) => {\n    // data for submit\n    console.log(imageList);\n    console.log(addUpdateIndex);\n    // console.log(imageList[addUpdateIndex].data_url);\n    setImages(imageList);\n  };\n  const options = {\n    Webcam: true,\n  };\n  // const open = () => {\n  //   // console.log('open',element)\n  // };\n  return (\n    <div className='photo_layout'>\n      <div className='top_content_photo'>\n        <Link to='/impressent' className='redirect_title'>\n          <p className='impressent_top_file'>impressent</p>\n        </Link>\n        <Link to='/impressent/file' className='link_back'>\n          <p className='back_key photo_back'>Go back</p>\n        </Link>\n        <Link to='/impressent/filemob' className='mob_back'>\n          <p className='back_key back_photo'>Go back</p>\n        </Link>\n      </div>\n\n      <div className='photo_center'>\n        <p className='record_video'>Record Video</p>\n        <div className='vectors'>\n          <img className='vector' src={Vector1} alt=''></img>\n          <img className='vector' src={Vector4} alt=''></img>\n          <img className='vector' src={Vector2} alt=''></img>\n          <img className='vector' src={Vector5} alt=''></img>\n          <img className='vector' src={Vector3} alt=''></img>\n        </div>\n      </div>\n      <div className='group_47'>\n        {/* For getting the image from the user */}\n        <ImageUploading\n          multiple\n          value={images}\n          onChange={onChange}\n          // maxNumber={maxNumber}\n          dataURLKey='data_url'\n          className='mt-5'\n        >\n          {({\n            imageList,\n            onImageUpload,\n            onImageRemoveAll,\n            onImageUpdate,\n            onImageRemove,\n            isDragging,\n            dragProps,\n          }) => (\n            // write your building UI\n            <div className='upload__image_wrapper'>\n              {/* <div className={imageList.length > 5 ? 'image_grid_max' : 'image-grid'}> */}\n              <div className={imageList.length > 5 ? 'image_grid_max' : 'image-grid'}>\n                {/* Display the image from the slides array */}\n                {imageList.map((image, index) => (\n                  <div key={index} className='image_item button_container'>\n                    {/* {console.log(image)}\n                     {console.log('image array of 0', images[0].data_url)} */}\n                    <img src={image.data_url} className='photoSelectImage' alt='' />\n                    <div className='image-item__btn-wrapper'>\n                      {/* Delete handler */}\n                      <button onClick={() => onImageRemove(index)} className='btn_n'>\n                        <DeleteOutlineIcon className='btn_icon' />\n                      </button>\n                    </div>\n                  </div>\n                ))}\n                <div>\n                  {/* Button for ading the slides */}\n                  <button\n                    className='addmore_btn'\n                    style={isDragging ? { color: 'red' } : undefined}\n                    onClick={onImageUpload}\n                    {...dragProps}\n                    id='myCheck'\n                  >\n                    <img className='vectoradd' src={VectorAdd} alt=''></img>\n                    <p className='add_p'> Add more</p>\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </ImageUploading>\n      </div>\n      <div className={images.length >= 1 ? 'lower_photo' : 'lower_photo_remove_flex'}>\n        <Link to='/impressent/video' className={images.length >= 1 ? 'link' : 'd-none'}>\n          <p className='proceed_photo'>Proceed</p>\n        </Link>\n        {/* <footer className='footer_photo'> */}\n      </div>\n      <footer className='footer_photo copyRight'>© Copyright 2020</footer>\n    </div>\n  );\n}\n\nexport default PhotosSelect;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\FileManagerMobile.js",["137","138","139","140","141","142","143","144","145","146","147","148"],"import React from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport DataApi from '../utils/DataApi';\nimport Rectangle9 from '../images/Rectangle 9.svg';\nimport VectorAdd from '../images/Vectoradd.svg';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../css/fileManagerMobile.css';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Vector1 from '../images/Vector_select.svg';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport $ from 'jquery';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport CaptureImage from './CaptureImage';\nimport MobileCameraCapture from './MobileCameraCapture';\nclass FileManagerMobile extends React.Component {\n  static contextType = DataApi;\n\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      clicked: false,\n      capture: false,\n    };\n  }\n  render() {\n    this.onClick = () => {\n      console.log('clicked');\n      this.setState({ clicked: true });\n    };\n    this.onCloseHandle = () => {\n      console.log('clicked');\n      this.setState({ clicked: false });\n    };\n    const onChange = (imageList, addUpdateIndex) => {\n      // data for submit\n      console.log(imageList, addUpdateIndex);\n      this.context.setImages(imageList);\n      this.setState({ show: false });\n\n      // <Redirect to='photo' />;\n      // To redirect to next page\n      const element1 = document.getElementById('link');\n      element1.click();\n    };\n    this.captureHandle = () => {\n      this.setState({\n        capture: true,\n      });\n    };\n    this.handleTakePhoto = (dataUri) => {\n      // Do stuff with the photo...\n      console.log('takePhoto');\n    };\n    return (\n      <div className='file_layout'>\n        <div className='top_content_file'>\n          <Link to='/impressent' className='redirect_title'>\n            <p className='impressent_top_file_mob'>impressent</p>\n          </Link>\n          <Link to='/impressent' className='link_back'>\n            <p className='back_key'>Go back</p>\n          </Link>\n        </div>\n        <div className='icon_body'>\n          <div className='no_data_div'>\n            <p className='no_data'>No data available</p>\n          </div>\n        </div>\n        <ImageUploading\n          multiple\n          value={this.context.images}\n          onChange={onChange}\n          // maxNumber={maxNumber}\n          dataURLKey='data_url'\n          className='mt-5'\n          id='FilesSelector'\n        >\n          {({\n            imageList,\n            onImageUpload,\n            onImageRemoveAll,\n            onImageUpdate,\n            onImageRemove,\n            isDragging,\n            dragProps,\n          }) => (\n            // write your building UI\n            <div className='icons_row'>\n              {/* {this.state.clicked ? ( */}\n              {/* <div className='show_click'> */}\n              {/* <div className='camera'>\n                      <p>Capture Now</p>\n                      <button onClick={this.captureHandle} className='select_btn'>\n                        <div className='camera_div'>\n                          <CameraAltIcon style={{ fontSize: '20px' }} className='camera_icon' />\n                        </div>\n                      </button>\n                    </div> */}\n              {/* <div className='camera'>\n                      <p className='select_p'>Select Images</p>\n\n                      <button\n                        className='camera-div select_btn'\n                        style={isDragging ? { color: 'red' } : undefined}\n                        onClick={onImageUpload}\n                        {...dragProps}\n                        id='myCheck'\n                      > \n                        <div className='vector_icon'>\n                          <img className='vector_image' src={Vector1} alt=''></img>\n                        </div>\n                      </button>\n                    </div>\n\n                    <div className='close_div'>\n                      <button onClick={this.onCloseHandle}>\n                        <ClearIcon style={{ fontSize: 30 }} className='close_icon' />\n                      </button>\n                    </div>\n                  </div>\n                ) : ( */}\n              <div className='add_div'>\n                {/* <button onClick={this.onClick} className='add_icon_div'> */}\n                <button\n                  className='add_icon_div'\n                  style={isDragging ? { color: 'red' } : undefined}\n                  onClick={onImageUpload}\n                  {...dragProps}\n                  id='myCheck'\n                >\n                  <AddIcon style={{ fontSize: 50 }} className='add_icon' />\n                </button>\n              </div>\n              )\n            </div>\n          )}\n        </ImageUploading>\n        <footer className='mob_footer mob_file'>© Copyright 2020</footer>\n\n        <Link to='/impressent/photo' className='d-none' id='link'></Link>\n      </div>\n    );\n  }\n}\n\nexport default FileManagerMobile;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\ShareScreen.js",["149","150"],"import React, { useEffect } from 'react';\nimport '../css/shareScreen.css';\nimport DataApi from '../utils/DataApi';\nimport Vector1 from '../images/whatsapp.svg';\nimport Vector2 from '../images/mail.svg';\n\nfunction ShareScreen(props) {\n  const { togglePop, shareUrl } = props;\n  const { setShareUrl } = React.useContext(DataApi);\n  useEffect(() => {\n    return () => {};\n  }, [shareUrl]);\n\n  const copyHandler = () => {\n    /* Get the text field */\n    var copyText = document.getElementById('myInput');\n\n    /* Select the text field */\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n    /* Copy the text inside the text field */\n    document.execCommand('copy');\n\n    /* Alert the copied text */\n    alert('Copied the text: ' + copyText.value);\n  };\n  return (\n    <div className='popup'>\n      {/* for closing the popup */}\n      <span className='close' onClick={() => togglePop()}>\n        &times;\n      </span>\n      <div className='shareContent shareWebView'>\n        <p className='shareVideoPara colorTag'>Share Video</p>\n        <input\n          type='text'\n          id='myInput'\n          className='shareInput  colorTag'\n          readOnly\n          value={shareUrl}\n        />\n        {/* <div class='tooltip'> */}\n        <button className='shareShare' onClick={(e) => copyHandler()}>\n          {/* <span className='tooltiptext' id='myTooltip'>\n              Copy to clipboard\n            </span> */}\n          copy link\n        </button>\n        {/* </div> */}\n        <p className='shareVia colorTag'>share link via</p>\n        {/* For sharing the link through different form */}\n        <div className='shareIcons'>\n          {/* <a href='https://web.whatsapp.com/'>\n            <img className='vector' src={Vector1} alt='' />\n          </a> */}\n          <a\n            href={`https://mail.google.com/mail/?view=cm&fs=1&to=&su=Show And Tell App &body=${shareUrl}`}\n          >\n            <img className='vector' src={Vector2} alt='' />\n          </a>\n          {/* <img className='vector' src={Vector3} alt='' /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ShareScreen;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\MobileCameraCapture.js",["151","152","153","154","155"],"import React, { Component, Fragment as div, useEffect } from 'react';\nimport { Camera } from 'react-cam';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport DataApi from '../utils/DataApi';\nimport '../css/mobileCameraCapture.css';\nclass MobileCameraCapture extends Component {\n  static contextType = DataApi;\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n    };\n  }\n  componentDidMount() {\n    console.log('mounted');\n    console.log('listen');\n    // this.props.setCapture(false);\n    let form = document.getElementById('myform');\n    console.log('form', form);\n    let input = document.getElementById('capture');\n    input.click();\n    console.log('input', input);\n    input.addEventListener('change', (ev) => {\n      console.dir(input.files[0]);\n      if (input.files[0].type.indexOf('image/') > -1) {\n        let img = document.getElementById('img');\n        img.src = window.URL.createObjectURL(input.files[0]);\n        console.log(form);\n        console.log(input.files[0]);\n        // this.setState((prevState, props) => ({counter: prevState.counter = props.step})\n        this.setState((prevState) => ({ images: prevState.images.concat(img.src) }));\n        this.context.setImages((prevState) => prevState.concat(this.state.images));\n        const element1 = document.getElementById('link');\n        element1.click();\n        if (this.props.capture) {\n          this.props.setCapture(false);\n        }\n        console.log('array', this.state.images);\n      }\n      //  else if (input.files[0].type.indexOf('audio/') > -1) {\n      //   let audio = document.getElementById('audio');\n      //   audio.src = window.URL.createObjectURL(input.files[0]);\n      // } else if (input.files[0].type.indexOf('video/') > -1) {\n      //   let video = document.getElementById('video');\n      //   video.src = window.URL.createObjectURL(input.files[0]);\n      // }\n    });\n  }\n\n  render() {\n    return (\n      <div className='mob_camera'>\n        <form action='#' id='myform' encType='multipart/form-data'>\n          <label htmlFor='capture' className='d-none'>\n            Capture\n          </label>\n\n          <input type='file' id='capture' accept='image/*' className='d-none' capture multiple />\n          {/* <input type='file' id='capture' accept='image/*,video/*,audio/*' capture multiple /> */}\n\n          <br />\n          <input type='submit' className='d-none' value='Process' />\n        </form>\n        <p className='d-none'>\n          <img src='' id='img' alt='from phone' />\n        </p>\n        {/* <p>\n          <audio src='' id='audio' controls></audio>\n        </p>\n        <p>\n          <video src='' id='video' controls></video>\n        </p> */}\n        <Link to='/capturedView' className='d-none' id='link'></Link>\n      </div>\n    );\n  }\n}\nexport default MobileCameraCapture;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\RecordVideoMobile.js",["156","157","158","159","160","161"],"// import React from 'react';\n// import DataApi from '../utils/DataApi';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import Vector1 from '../images/Vector1_rec.svg';\n// import Vector2 from '../images/Vector2_rec.svg';\n// import Vector3 from '../images/Vector3.svg';\n// import Vector4 from '../images/Vector4.svg';\n// import Vector5 from '../images/Vector5.svg';\n// import '../css/recordVideoMobile.css';\n// function RecordVideoMobile() {\n//   React.useEffect(() => {\n//     const controls = document.querySelector('.controls');\n//     const cameraOptions = document.querySelector('.video-options>select');\n//     const video = document.querySelector('video');\n//     const canvas = document.querySelector('canvas');\n//     const screenshotImage = document.querySelector('img');\n//     const buttons = [...controls.querySelectorAll('button')];\n//     let streamStarted = false;\n\n//     const [play, pause, screenshot] = buttons;\n\n//     const constraints = {\n//       video: {\n//         width: {\n//           min: 1280,\n//           ideal: 1920,\n//           max: 2560,\n//         },\n//         height: {\n//           min: 720,\n//           ideal: 1080,\n//           max: 1440,\n//         },\n//       },\n//     };\n\n//     cameraOptions.onchange = () => {\n//       const updatedConstraints = {\n//         ...constraints,\n//         deviceId: {\n//           exact: cameraOptions.value,\n//         },\n//       };\n\n//       startStream(updatedConstraints);\n//     };\n\n//     play.onclick = () => {\n//       if (streamStarted) {\n//         video.play();\n//         play.classList.add('d-none');\n//         pause.classList.remove('d-none');\n//         return;\n//       }\n//       if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n//         const updatedConstraints = {\n//           ...constraints,\n//           deviceId: {\n//             exact: cameraOptions.value,\n//           },\n//         };\n//         startStream(updatedConstraints);\n//       }\n//     };\n\n//     const pauseStream = () => {\n//       video.pause();\n//       play.classList.remove('d-none');\n//       pause.classList.add('d-none');\n//     };\n\n//     const doScreenshot = () => {\n//       canvas.width = video.videoWidth;\n//       canvas.height = video.videoHeight;\n//       canvas.getContext('2d').drawImage(video, 0, 0);\n//       screenshotImage.src = canvas.toDataURL('image/webp');\n//       screenshotImage.classList.remove('d-none');\n//     };\n\n//     pause.onclick = pauseStream;\n//     screenshot.onclick = doScreenshot;\n\n//     const startStream = async (constraints) => {\n//       const stream = await navigator.mediaDevices.getUserMedia(constraints);\n//       handleStream(stream);\n//     };\n\n//     const handleStream = (stream) => {\n//       video.srcObject = stream;\n//       play.classList.add('d-none');\n//       pause.classList.remove('d-none');\n//       screenshot.classList.remove('d-none');\n//     };\n\n//     const getCameraSelection = async () => {\n//       const devices = await navigator.mediaDevices.enumerateDevices();\n//       const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n//       const options = videoDevices.map((videoDevice) => {\n//         return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\n//       });\n//       cameraOptions.innerHTML = options.join('');\n//     };\n//     getCameraSelection();\n//     return () => {};\n//   }, []);\n//   return (\n//     <div className='mob_record'>\n//       <div className='top_content_photo'>\n//         <p className='impressent_top_photo'>impressent</p>\n//       </div>\n//       <div className='container'>\n//         <div className='video_center'>\n//           <p className='record_video'>Record Video</p>\n//           <div className='vectors'>\n//             <img className='vector' src={Vector1} alt='' />\n//             <img className='vector' src={Vector4} alt='' />\n//             <img className='vector' src={Vector2} alt='' />\n//             <img className='vector' src={Vector5} alt='' />\n//             <img className='vector' src={Vector3} alt='' />\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className='display-cover'>\n//         <video autoplay></video>\n//         <canvas className='d-none'></canvas>\n\n//         <div className='video-options'>\n//           <select name='' id='' class='custom-select'>\n//             <option value=''>Select camera</option>\n//           </select>\n//         </div>\n\n//         <img className='screenshot-image d-none' alt='' />\n\n//         <div className='controls'>\n//           <button className='btn btn-danger play' title='Play'>\n//             <i data-feather='play-circle'> play</i>\n//           </button>\n//           <button className='btn btn-info pause d-none' title='Pause'>\n//             <i data-feather='pause'> pause</i>\n//           </button>\n//           <button className='btn btn-outline-success screenshot d-none' title='ScreenShot'>\n//             <i data-feather='image'>scrren shot</i>\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default RecordVideoMobile;\n\nimport React, { Component, Fragment as div, useEffect } from 'react';\nimport { Camera } from 'react-cam';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport DataApi from '../utils/DataApi';\nimport '../css/mobileCameraCapture.css';\nclass RecordVideoMobile extends Component {\n  static contextType = DataApi;\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n    };\n  }\n  componentDidMount() {\n    console.log('mounted');\n    console.log('listen');\n    // this.props.setCapture(false);\n    let form = document.getElementById('myform');\n    console.log('form', form);\n    let input = document.getElementById('capture');\n    input.click();\n    console.log('input', input);\n    input.addEventListener('change', (ev) => {\n      console.dir(input.files[0]);\n      if (input.files[0].type.indexOf('image/') > -1) {\n        let img = document.getElementById('img');\n        img.src = window.URL.createObjectURL(input.files[0]);\n        console.log(form);\n        console.log(input.files[0]);\n        // this.setState((prevState, props) => ({counter: prevState.counter = props.step})\n        this.setState((prevState) => ({ images: prevState.images.concat(img.src) }));\n        this.context.setImages((prevState) => prevState.concat(this.state.images));\n        // const element1 = document.getElementById('link');\n        // element1.click();\n        if (this.props.capture) {\n          this.props.setCapture(false);\n        }\n        console.log('array', this.state.images);\n      } else if (input.files[0].type.indexOf('audio/') > -1) {\n        let audio = document.getElementById('audio');\n        audio.src = window.URL.createObjectURL(input.files[0]);\n      } else if (input.files[0].type.indexOf('video/') > -1) {\n        let video = document.getElementById('video');\n        video.src = window.URL.createObjectURL(input.files[0]);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className='mob_camera'>\n        <form action='#' id='myform' encType='multipart/form-data'>\n          <label htmlFor='capture' className='d-none'>\n            Capture\n          </label>\n\n          {/* <input type='file' id='capture' accept='image/*' capture multiple /> */}\n          <input type='file' id='capture' accept='video/*,audio/*' capture multiple />\n\n          <br />\n          <input type='submit' value='Process' />\n        </form>\n        <p className='d-none'>\n          <img src='' id='img' alt='from phone' />\n        </p>\n        <p>\n          <audio src='' id='audio' controls></audio>\n        </p>\n        <p>\n          <video src='' id='video' controls></video>\n        </p>\n        {/* <Link to='/capturedView' id='link'></Link> */}\n      </div>\n    );\n  }\n}\nexport default RecordVideoMobile;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\ShareMobile.js",["162","163","164","165","166","167","168","169"],"import React, { useEffect, useState } from 'react';\nimport DataApi from '../utils/DataApi';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Vector1 from '../images/whatsapp.svg';\nimport Vector2 from '../images/mail.svg';\nimport Vector3 from '../images/add.svg';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport VectorPlay from '../images/Vector_play.svg';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport '../css/shareMobile.css';\nimport { ShowChartRounded } from '@material-ui/icons';\nfunction ShareMobile() {\n  const { recordedChunks, shareUrl, setShareUrl } = React.useContext(DataApi);\n  const [playButton, setPlayButton] = useState(true);\n\n  // useEffect(() => {\n  //   // For video Play time\n  //   let video = document.getElementById('vid2');\n\n  //   var i = setInterval(function () {\n  //     console.log(video.currentTime);\n  //     // var unit = `  `;\n  //     var minutes = parseInt(video.currentTime / 60, 10);\n  //     var seconds = video.currentTime % 60;\n  //     seconds = Math.trunc(seconds);\n  //     document.getElementById('duration').innerHTML = `${minutes} : ${seconds}`;\n  //   }, 1000);\n\n  //   return () => {\n  //     clearInterval(i);\n  //   };\n  // }, [recordedChunks, shareUrl]);\n  const playHandler = () => {\n    console.log('clicked');\n    // durationHandle();\n    // time();\n    let video = document.getElementById('vid2');\n    if (video.paused == true) {\n      console.log(video);\n      // Play the video\n      setPlayButton(false);\n      video.play();\n    } else {\n      // Pause the video\n      console.log(video);\n      setPlayButton(true);\n\n      video.pause();\n    }\n  };\n  const copyHandler = () => {\n    /* Get the text field */\n    var copyText = document.getElementById('myInput');\n\n    /* Select the text field */\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n    /* Copy the text inside the text field */\n    document.execCommand('copy');\n\n    /* Alert the copied text */\n    alert('Copied the text: ' + copyText.value);\n  };\n\n  // to open the share view\n  const addMoreHandler = () => {\n    if (navigator.share) {\n      navigator\n        .share({\n          title: 'Show and Tell App',\n          url: shareUrl,\n        })\n        .then(() => {\n          console.log('Thanks for sharing!');\n        })\n        .catch(console.error);\n    } else {\n      // fallback\n    }\n  };\n\n  return (\n    <div className='sharePage'>\n      <div className='top_content_photo'>\n        <Link to='/impressent' className='redirect_title'>\n          <p className='impressent_top_file'>impressent</p>\n        </Link>\n      </div>\n      <div className='container justify-content-center review_container share_container'>\n        <div className='row row-md-6 row-sm-2 justify-content-center shareMobCenter'>\n          <div className=' col col-md-6 col-sm-2 video_part video_mob'>\n            <video id='vid2' src={recordedChunks} className='video_review'></video>\n            <button className='play_btn' id='playBtn' onClick={(e) => playHandler()}>\n              {playButton ? (\n                <img className='vector' src={VectorPlay} alt='' />\n              ) : (\n                <PauseIcon style={{ fontSize: 50 }} className='pause_icon' />\n              )}\n            </button>\n            <p id='duration durationShare'></p>\n          </div>\n          <div className='shareContent'>\n            <p className='shareVideoPara'>Share Video</p>\n            <input type='text' id='myInput' className='shareInput' readOnly value={shareUrl} />\n            <button className='shareShare' onClick={(e) => copyHandler()}>\n              copy link\n            </button>\n            <p className='shareVia'>share link via</p>\n            <div className='shareIcons'>\n              <a href={`whatsapp://send?text=${shareUrl}`} title='Share on whatsapp'>\n                <img className='vector' src={Vector1} alt='' />\n              </a>\n\n              <a href={`mailto:?&subject=Show And Tell App&body=${shareUrl}`}>\n                <img className='vector' src={Vector2} alt='' />\n              </a>\n              <button onClick={() => addMoreHandler()} className='addMore'>\n                <img className='vector' src={Vector3} alt='' />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer className='footer_record footer_share'>© Copyright 2020</footer>\n    </div>\n  );\n}\n\nexport default ShareMobile;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\Review.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useEffect, useState } from 'react';\nimport DataApi from '../utils/DataApi';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Vector1 from '../images/Vector1_rec.svg';\nimport Vector3 from '../images/vector3_rec.svg';\nimport Vector4 from '../images/Vector4.svg';\nimport Vector5 from '../images/Vector5.svg';\nimport Vector2 from '../images/Vector2.svg';\nimport VectorPlay from '../images/Vector_play.svg';\nimport PauseIcon from '@material-ui/icons/Pause';\n// import 'node_modules/video-react/dist/video-react.css';\nimport { Player } from 'video-react';\nimport $, { data } from 'jquery';\nimport '../css/review.css';\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from 'formik';\nimport * as Yup from 'yup';\nimport TextError from './TextError';\nimport Axios from 'axios';\nimport ShareScreen from './ShareScreen';\nimport workerClient from 'ffmpeg-webworker';\n\nfunction Review(props) {\n  const {\n    recordedChunks,\n    images,\n    setRecordedChunks,\n    setImages,\n    imgArray,\n    setImgArray,\n    setImageName,\n    imageName,\n    imageSlideTime,\n    setImageSlideTime,\n    timeArray,\n    setTimeArray,\n    imageForRequest,\n    setImageForRequest,\n    imageNameForRequest,\n    setImageNameForRequest,\n    shareUrl,\n    setShareUrl,\n  } = React.useContext(DataApi);\n  const [playButton, setPlayButton] = useState(true);\n  const [newImageSlideTime, setNewImageSlideTime] = useState([]);\n  const [updateImageSlideTime, setUpdateImageSlideTime] = useState(true);\n  const [videoConverted, setVideoConverted] = useState(null);\n  // const [shareUrl, setShareUrl] = useState('');\n  const [mobileView, setMobileView] = useState(false);\n  const [imageSend, setimageSend] = useState([]);\n  const [videoName, setVideoName] = useState('recordedVideo');\n  const [reRun, setReRun] = useState(true);\n  const [submitted, setSubmitted] = useState(false);\n\n  // const [title, setTitle] = useState('');\n  // const [description, setDescription] = useState('');\n\n  // initialize form values\n  const [initialValues, setInitialValues] = useState({\n    title: '',\n    description: '',\n  });\n  const inputRef = React.useRef(null);\n  const [popup, setPopup] = useState(false);\n  const [currentPathname, setCurrentPathname] = useState(null);\n  const [currentSearch, setCurrentSearch] = useState(null);\n  const [ffmpegReady, setFfmpegReady] = useState(false);\n  const [stdOutputText, setstdOutputText] = useState('');\n  const [dataGot, setDataGot] = useState(null);\n  useEffect(() => {\n    // workerClient.on('onReady', () => setFfmpegReady(false));\n    // workerClient.on('onStdout', (msg) => setstdOutputText(msg));\n    // workerClient.on('onFileReceived', (msg) => setstdOutputText(msg));\n    // workerClient.on('onDone', (data) => {\n    //   setstdOutputText('Command Completed, check the console');\n    //   console.log('converted data', data);\n    //   setDataGot(data);\n    // });\n    // // Set the file for processing\n    // // workerClient.inputFile = recordedChunks;\n    // // Run a valid ffmpeg command\n    // // var newVideo = workerClient.runCommand(\n    // //   `ffmpeg -i ${recordedChunks} -vcodec h264 -acodec mp2 output.mp4`,\n    // // );\n    // workerClient.runCommand('-ss 00:00:05 -c copy -t 12 sliced-output.mp4');\n    // setDataGot(newVideo);\n    // console.log('newVideo', data);\n    // const { history } = props;\n    // history.listen((newLocation, action) => {\n    //   if (action === 'PUSH') {\n    //     if (newLocation.pathname !== currentPathname || newLocation.search !== currentSearch) {\n    //       // Save new location\n    //       setCurrentPathname = newLocation.pathname;\n    //       setCurrentSearch = newLocation.search;\n\n    //       // Clone location object and push it to history\n    //       history.push({\n    //         pathname: newLocation.pathname,\n    //         search: newLocation.search,\n    //       });\n    //     }\n    //   } else {\n    //     // Send user back if they try to navigate back\n    //     history.go(1);\n    //   }\n    // });\n\n    // if (submitted) {\n    //   history.pushState(null, null, location.href);\n    //   window.onpopstate = function (event) {\n    //     history.go(1);\n    //   };\n    console.log('Recorded chunks view', recordedChunks);\n    console.log('Image Name,Image Array,timeArray', imageName, imgArray, timeArray);\n    if (reRun) {\n      var randomValue = Math.floor(Math.random() * (100000 + 1));\n      // console.log('random Value', randomValue);\n      var newValue = videoName + randomValue + '.mp4';\n      setVideoName(newValue);\n      setReRun(false);\n    }\n    // To remove that extra string value from the video file\n    if (recordedChunks) {\n      var videoFile = recordedChunks;\n      console.log('video File', videoFile);\n      videoFile = videoFile.replace('data:video/mp4;;base64,', '');\n      console.log('converted video File', videoFile);\n      setVideoConverted(videoFile);\n    }\n\n    // For video Play time\n    let video = document.getElementById('vid2');\n\n    var i = setInterval(function () {\n      console.log(video.currentTime);\n      // var unit = `  `;\n      var minutes = parseInt(video.currentTime / 60, 10);\n      var seconds = video.currentTime % 60;\n      seconds = Math.trunc(seconds);\n      document.getElementById('duration').innerHTML = `${minutes} : ${seconds}`;\n    }, 1000);\n\n    // To assign values into newImageSlideTime Array\n    console.log('Image Array,Image Array ,timeArray', imgArray, imageName, timeArray);\n    if (updateImageSlideTime) {\n      //For Image\n      var newImageObject = {};\n      imageName.forEach((key, i) => (newImageObject[imageName[i]] = imgArray[i]));\n      console.log('newImage Object', newImageObject);\n      setImageForRequest((prevState) => prevState.concat(newImageObject));\n\n      // For image name\n      var result = {};\n      imageName.forEach((key, i) => (result[imageName[i]] = imageName[i]));\n      console.log(result);\n      setImageNameForRequest((prevState) => prevState.concat(result));\n\n      //For Image slide timer\n      var newSlideTimer = {};\n      imageName.forEach((key, i) => (newSlideTimer[imageName[i]] = timeArray[i]));\n      setNewImageSlideTime((prevState) => prevState.concat(newSlideTimer));\n      console.log('time after setting', newImageSlideTime);\n\n      setUpdateImageSlideTime(false);\n    }\n\n    return () => {\n      clearInterval(i);\n    };\n  }, [recordedChunks]);\n\n  //Video Play handler\n  const playHandler = () => {\n    console.log('clicked');\n    // durationHandle();\n    // time();\n    let video = document.getElementById('vid2');\n    if (video.paused == true) {\n      console.log(video);\n      // Play the video\n      setPlayButton(false);\n      video.play();\n    } else {\n      // Pause the video\n      console.log(video);\n      setPlayButton(true);\n\n      video.pause();\n    }\n  };\n\n  //Submit handling and API call\n\n  const onSubmit = (values, onSubmitProps) => {\n    setSubmitted(true);\n    console.log('clicked submit');\n    console.log('recoreded', videoConverted);\n    // console.log('video Name', videoName);\n\n    console.log('images', imgArray);\n    // console.log('image_slide_time', newImageSlideTime);\n    // console.log('imageName', imageName);\n    // console.log('video', recordedChunks);\n    // console.log('video_name', 'Recorded Video');\n    // console.log('title and descrription', values);\n\n    // const showAndTellUrl = 'http://144.76.139.247/httest/sat/test/product/image_save.php';\n    const showAndTellUrl = 'https://httest.in/sat/test/product/image_save.php';\n\n    const postBody = {\n      images: imageForRequest,\n      image_name: imageNameForRequest,\n      image_slide_time: newImageSlideTime,\n      // video: videoConverted,\n      video: videoConverted,\n      video_name: videoName,\n      audio: null,\n      audio_name: null,\n      title: values.title,\n      description: values.description,\n    };\n\n    // console.log('Stringified', JSON.stringify(postBody));\n    console.log('Post Request Body', postBody);\n    // const requestMetadata = {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     // 'Access-Control-Allow-Origin': '*',\n    //     mode: 'no-cors', // 'cors' by default\n    //   },\n    //   body: JSON.stringify(postBody),\n    // };\n    // // console.log(requestMetadata);\n    // fetch(showAndTellUrl, requestMetadata)\n    //   .then((response) => {\n    //     console.log('response', response);\n    //   })\n    //   .catch((err) => {\n    //     console.log('error', err);\n    //   });\n    Axios.post(showAndTellUrl, postBody)\n      .then((response) => {\n        console.log(response.data.URL);\n        setShareUrl(response.data.URL);\n        console.log(shareUrl);\n        console.log('post body', postBody);\n        onSubmitProps.setSubmitting(false);\n        if (mobileView) {\n          console.log('clicked', mobileView);\n          const element1 = document.getElementById('sharemob');\n          element1.click();\n        } else {\n          console.log('Not', mobileView);\n          const element1 = document.getElementById('open');\n          element1.click();\n        }\n      })\n      .catch((err) => console.log(err));\n\n    console.log('post body', postBody);\n    // console.log(imageName);\n    // console.log('imgArray', imgArray);\n    // console.log('video', recordedChunks);\n    // console.log(values);\n  };\n\n  // For validating the form\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Required !'),\n    description: Yup.string().required('Required !'),\n  });\n\n  // To open and close popup\n  const togglePop = () => {\n    console.log(popup);\n    setPopup((prevState) => !prevState);\n  };\n  console.log('review', recordedChunks);\n  return (\n    <div className='review_page'>\n      {console.log('page running')}\n      <div className='top_content_photo'>\n        <Link to='/impressent' className='redirect_title'>\n          <p className='impressent_top_file'>impressent</p>\n        </Link>\n        {!submitted ? (\n          <Link to='/impressent/video' className='link_back'>\n            <p className='back_key'>Go back</p>\n          </Link>\n        ) : null}\n      </div>\n\n      {popup ? (\n        <div className='popUpDiv'>\n          <ShareScreen shareUrl={shareUrl} togglePop={togglePop} />\n        </div>\n      ) : null}\n      <div className='container'>\n        <div className='video_center'>\n          <p className='record_video'>Save Video</p>\n          <div className='vectors'>\n            <img className='vector' src={Vector1} alt='' />\n            <img className='vector' src={Vector4} alt='' />\n            <img className='vector' src={Vector2} alt='' />\n            <img className='vector' src={Vector5} alt='' />\n            <img className='vector' src={Vector3} alt='' />\n          </div>\n\n          <div className='container justify-content-center review_container'>\n            <div className='row row-md-6 row-sm-2 justify-content-center'>\n              <div className=' col col-md-6 col-sm-2 video_part'>\n                <video id='vid2' src={recordedChunks} className='video_review'></video>\n                <button className='play_btn' id='playBtn' onClick={(e) => playHandler()}>\n                  {playButton ? (\n                    <img className='vector' src={VectorPlay} alt='' />\n                  ) : (\n                    <PauseIcon style={{ fontSize: 50 }} className='pause_icon' />\n                  )}\n                </button>\n                <p id='duration'></p>\n              </div>\n              <Formik\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                validationSchema={validationSchema}\n              >\n                {(formik) => {\n                  return (\n                    <div className='content_part col col-md-6 col-sm-6'>\n                      <Form>\n                        <Field\n                          className='review_title'\n                          placeholder='Title'\n                          name='title'\n                          // ref={inputRef}\n                          innerRef={inputRef}\n                          id='input1'\n                          // value={title}\n                          // onChange={(e) => changeHandler(e)}\n                        ></Field>\n                        <ErrorMessage name='title'>\n                          {(errorMsg) => <div className='error_title'>{errorMsg}</div>}\n                        </ErrorMessage>\n                        <div className='descriptionMargin'>\n                          <Field\n                            as='textarea'\n                            className='review_description'\n                            placeholder='Description'\n                            name='description'\n                            // value={description}\n                            // onChange={(e) => changeHandler(e)}\n                          />\n                          <ErrorMessage name='description' component={TextError} />\n                        </div>\n                        {formik.isSubmitting ? (\n                          <div className='wait_message '>Please Wait ...</div>\n                        ) : (\n                          <div>\n                            <button\n                              className='review_share sharemargin'\n                              type='submit'\n                              disabled={formik.isSubmitting}\n                            >\n                              Save & Share\n                            </button>\n                            <div className='mobViewReview'>\n                              <button\n                                className='review_share_mob mobViewReview'\n                                onClick={(e) => setMobileView(true)}\n                                type='submit'\n                                disabled={formik.isSubmitting}\n                              >\n                                Save & Share\n                              </button>\n                              <footer className='footer_review_mob'>© Copyright 2020</footer>\n                            </div>\n                          </div>\n                        )}\n\n                        <Link to='/impressent/sharemob' className='d-none' id='sharemob'></Link>\n                      </Form>\n                    </div>\n                  );\n                }}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button onClick={() => togglePop()} id='open' className='d-none'>\n        Open\n      </button>\n\n      <button onClick={() => console.log('Data converted', dataGot)}>Video</button>\n      <div className='footerReviewWeb'>\n        <div className='footer_record_div d-flex justify-content-center d-flex align-items-center footer_review'>\n          <footer className='footer_record'>© Copyright 2020</footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Review;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\SlideShow.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { useState, useEffect } from 'react';\nimport { Slide } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport DataApi from '../utils/DataApi';\nimport '../css/slideShow.css';\nimport Arrow1 from '../images/Arrow 1.svg';\nimport Arrow2 from '../images/Arrow 2.svg';\nimport Arrow3 from '../images/Arrow 3.svg';\nimport Arrow4 from '../images/Arrow 4.svg';\n\nconst SlideShow = (props) => {\n  const [arrayReached, setArrayReached] = useState(false);\n  const [slidesReached, setSlidesReached] = useState(2);\n  // Accesing states from React create context\n  const {\n    recordedChunks,\n    images,\n    setRecordedChunks,\n    setImages,\n    imageName,\n    setImageName,\n  } = React.useContext(DataApi);\n\n  //Accessing states from props provided by Record video\n  const {\n    timeWhenVideoStarted,\n    settimeWhenVideoStarted,\n    timeArray,\n    setTimeArray,\n    imageRef,\n    slideRef,\n    imgArray,\n    setImgArray,\n    slideChange,\n    setSlideArrayCheck,\n    pauseImg,\n    imageNumber,\n    setImageNumber,\n    slideImageHandler,\n    buttonText,\n  } = props;\n\n  // properties for video\n  const properties = {\n    // duration: 5000,\n    autoplay: false,\n    // transitionDuration: 500,\n    arrows: false,\n    infinite: true,\n    easing: 'ease',\n    onChange: (previous, next) => {\n      slideImageHandler(previous, next);\n      // pauseHandler(previous, next);\n    },\n    canSwipe: buttonText === 'pause' ? true : false,\n    indicators: (i) => <div className='indicator'>{i + 1}</div>,\n  };\n\n  useEffect(() => {\n    //If images[0] is available store it in image name (for storing the first slide)\n    // if (images[0]) {\n    //   var imageFile = images[0].data_url;\n    //   console.log('Image File', imageFile);\n    //   imageFile = imageFile.replace('data:image/png;base64,', '');\n\n    //   setImgArray((prevState) => prevState.concat(imageFile));\n    //   // setImageName((prevState) => prevState.concat(images[0].file.name));\n    // }\n    return () => {};\n  }, [pauseImg]);\n\n  const pauseHandler = (previous, next) => {\n    if (pauseImg) {\n      setImgArray((prevState) => prevState.concat(images[next].data_url));\n    }\n  };\n\n  return (\n    <div className='slide_show'>\n      <div className='slide-container'>\n        <Slide ref={slideRef} {...properties}>\n          {/* Displaying the slides */}\n          {images.map((image, index) => (\n            <div className='each-slide' key={index}>\n              <img\n                id='img_value'\n                className='lazy'\n                src={image.data_url}\n                width='220px'\n                height='180px'\n                alt='sample'\n              />\n            </div>\n          ))}\n        </Slide>\n        {/* Buttons to change the slides */}\n        {buttonText === 'pause' ? (\n          <div>\n            <button\n              onClick={(e) => slideRef.current.goBack()}\n              type='button'\n              id='myBtn'\n              className='back_button'\n            >\n              <img src={Arrow2} alt='' className='arrow arrow_web' />\n              <img src={Arrow3} alt='' className='arrow arrow_mob' />\n            </button>\n            <button\n              onClick={(e) => slideRef.current.goNext()}\n              type='button'\n              id='myBtn'\n              className='next_button'\n            >\n              <img src={Arrow1} alt='' className='arrow arrow_web' />\n              <img src={Arrow4} alt='' className='arrow arrow_mob' />\n            </button>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\nexport default SlideShow;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\RecordVideo.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { useEffect, useState } from 'react';\nimport DataApi from '../utils/DataApi';\nimport { Link } from 'react-router-dom';\nimport Vector1 from '../images/Vector1_rec.svg';\nimport Vector2 from '../images/Vector2_rec.svg';\nimport Vector3 from '../images/Vector3.svg';\nimport Vector4 from '../images/Vector4.svg';\nimport Vector5 from '../images/Vector5.svg';\nimport '../css/recordVideo.css';\nimport SlideShow from './SlideShow';\n\n\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nfunction RecordVideo() {\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [message, setMessage] = useState('Click Start to transcode');\n  const ffmpeg = createFFmpeg({\n    log: true,\n  });\n\n  const [buttonText, setbuttonText] = React.useState('record');\n  const [slidesReached, setSlidesReached] = useState(2);\n  const [imageNumberSet, setImageNumberSet] = useState(2);\n  const {\n    recordedChunks,\n    images,\n    setRecordedChunks,\n    setImages,\n    imgArray,\n    setImgArray,\n    timeArray,\n    setTimeArray,\n    imageName,\n\n    setImageName,\n  } = React.useContext(DataApi);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const [videoStarted, setVideoStarted] = useState(false);\n  const [timeWhenVideoStarted, settimeWhenVideoStarted] = useState(null);\n  const [pauseImg, setPauseImg] = useState(false);\n  const [intervalWhilePaused, setIntervalWhilePaused] = useState([]);\n  const [slideArrayCheck, setSlideArrayCheck] = useState(null);\n  const [paused, setPaused] = useState(false);\n  const slideRef = React.useRef();\n  const imageRef = React.useRef();\n  const [resumed, setResumed] = useState(false);\n  const [imageNumber, setImageNumber] = useState(1);\n  const [startingTime, setStartingTime] = useState(null);\n  const [pausedAndResumed, setPausedAndResumed] = useState(false);\n  const [stopInterval, setStopInterval] = useState(0);\n  const [previousSlideEndTime, setPreviousSlideEndTime] = useState(0);\n  const [videoFileGet, setvideoFileGet] = useState(null);\n\n  const doTranscode = async () => {\n    setMessage('Loading ffmpeg-core.js');\n    await ffmpeg.load();\n    setMessage('Start transcoding');\n    ffmpeg.FS('writeFile', 'test.avi', await fetchFile('/flame.avi'));\n    await ffmpeg.run('-i', 'test.avi', 'test.mp4');\n    setMessage('Complete transcoding');\n    const data = ffmpeg.FS('readFile', 'test.mp4');\n    setVideoSrc(URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' })));\n  };\n \n\n  //Button Handlers\n  const record_btnHandle = () => {\n    // Assigning timeWhenVideoStarted while clicking the record button\n    settimeWhenVideoStarted(new Date().getTime());\n    setStartingTime(new Date().getTime());\n    setbuttonText('pause');\n  };\n\n  const pauseBtnHandle = () => {\n    // We are setting paused to true for checking it was paused or not\n    // And to add the intervals while pause and after resume when first slide change happen\n    // and assign it in timearray\n    setPaused(true);\n    // setting button text to proceed for changing the buttons from pause to\n    // proceed or resume\n    setbuttonText('procced');\n\n    // If the user paused the recording\n    var currentTime = new Date().getTime();\n    var interval = currentTime - timeWhenVideoStarted;\n    setIntervalWhilePaused((prevState) => prevState.concat(interval));\n  };\n  const resumeHandle = () => {\n    // Assigning timeWhenVideoStarted while clicking the resume button\n    settimeWhenVideoStarted(new Date().getTime());\n    setbuttonText('pause');\n    setPausedAndResumed(true);\n  };\n\n  // To concat images with name into the image array\n  const slideImageHandler = (previous, next) => {\n    if (buttonText === 'pause') {\n      console.log('Next value', next);\n      var slideTime = slidesReached;\n      slideTime = slideTime + 1;\n      setSlidesReached(slideTime);\n      console.log('slides Reached', slidesReached);\n      \n      // To storing the image\n\n      var imageFile = images[next].data_url;\n      console.log('Image File', imageFile);\n      imageFile = imageFile.replace('data:image/png;base64,', '');\n      imageFile = imageFile.replace('data:image/jpeg;base64,', '');\n\n      setImgArray((prevState) => prevState.concat(imageFile));\n      console.log('Image Array', imgArray);\n\n      // To storing the image name\n      var randomValue = Math.floor(Math.random() * (10000 + 1));\n\n      // setImageName((prevState) => prevState.concat(images[next].file.name));\n      var imageNameSet = `image${randomValue}${imageNumberSet}`;\n      setImageName((prevState) => prevState.concat(imageNameSet));\n      setImageNumberSet((prevState) => prevState + 1);\n\n      console.log('Image Names', imageName);\n      \n      var currentTime = new Date().getTime();\n      var interval = currentTime - timeWhenVideoStarted;\n\n      // If it is paused then resumed add the paused time and next slide change time together\n      if (paused) {\n        var currentTime = new Date().getTime();\n        setPreviousSlideEndTime(currentTime);\n        var interval = currentTime - timeWhenVideoStarted;\n\n        console.log('Interval while Paused', intervalWhilePaused);\n        console.log('interval length', intervalWhilePaused.length);\n        // intervalWhilePaused.map((interval, i) => {\n        interval = interval + intervalWhilePaused[0];\n        if (intervalWhilePaused.length == 2) {\n          interval = interval + intervalWhilePaused[1];\n        }\n        if (intervalWhilePaused.length == 3) {\n          interval = interval + intervalWhilePaused[2];\n        }\n        if (intervalWhilePaused.length == 4) {\n          interval = interval + intervalWhilePaused[3];\n        }\n        if (intervalWhilePaused.length == 5) {\n          interval = interval + intervalWhilePaused[4];\n        }\n        if (intervalWhilePaused.length == 6) {\n          interval = interval + intervalWhilePaused[5];\n        }\n        if (intervalWhilePaused.length == 7) {\n          interval = interval + intervalWhilePaused[6];\n        }\n        if (intervalWhilePaused.length == 8) {\n          interval = interval + intervalWhilePaused[7];\n        }\n        // });\n        setStopInterval(interval);\n        console.log('intervalWhilePaused,interval', intervalWhilePaused, interval);\n        // var newTime = intervalWhilePaused + interval;\n        // converting time into '00:00:00' format\n        function msToTime(duration) {\n          var milliseconds = parseInt((duration % 1000) / 100),\n            seconds = Math.floor((duration / 1000) % 60),\n            minutes = Math.floor((duration / (1000 * 60)) % 60),\n            hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n          hours = hours < 10 ? '0' + hours : hours;\n          minutes = minutes < 10 ? '0' + minutes : minutes;\n          seconds = seconds < 10 ? '0' + seconds : seconds;\n\n          return hours + ':' + minutes + ':' + seconds;\n        }\n        var nextTime = msToTime(interval);\n        console.log('Time Array in paused', timeArray);\n        setTimeArray((prevState) => prevState.concat(nextTime));\n        // setPaused(false);\n      } else {\n        // For every other slide changes\n        // converting time in minutes and seconds\n        function msToTime(duration) {\n          var milliseconds = parseInt((duration % 1000) / 100),\n            seconds = Math.floor((duration / 1000) % 60),\n            minutes = Math.floor((duration / (1000 * 60)) % 60),\n            hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n          hours = hours < 10 ? '0' + hours : hours;\n          minutes = minutes < 10 ? '0' + minutes : minutes;\n          seconds = seconds < 10 ? '0' + seconds : seconds;\n\n          return hours + ':' + minutes + ':' + seconds;\n        }\n        var newTime = msToTime(interval);\n        console.log('Time', interval, newTime);\n        setTimeArray((prevState) => prevState.concat(newTime));\n        console.log('Time Array', timeArray);\n      }\n\n      // Assigning current time as video started time\n      // settimeWhenVideoStarted(currentTime);\n      console.log('difference', interval);\n      console.log('TimeArray', timeArray);\n      // setImgArray((prevState) => prevState.concat(slideArrayCheck));\n    }\n  };\n\n  //slide Change Handler\n  const slideChange = (value) => {};\n\n  useEffect(() => {\n   \n    setImageName([]);\n    setImgArray([]);\n    setImageNumber(2);\n    setTimeArray([]);\n\n    // we are assigning the first image into the image array\n    if (images[0]) {\n      var imageFile = images[0].data_url;\n      console.log('Image File', imageFile);\n      imageFile = imageFile.replace('data:image/png;base64,', '');\n      imageFile = imageFile.replace('data:image/jpeg;base64,', '');\n\n      setImgArray((prevState) => prevState.concat(imageFile));\n      var randomValue = Math.floor(Math.random() * (10000 + 1));\n\n      // setImageName((prevState) => prevState.concat(images[next].file.name));\n      var imageNameSet = `image${randomValue}1`;\n      setImageName((prevState) => prevState.concat(imageNameSet));\n    }\n\n    let constraintObj = {\n      // facingMode: {\n      //   exact: 'environment',\n\n      // },\n      facingMode: 'user',\n      audio: true,\n      video: {\n        width: { min: 640, ideal: 1280, max: 1920 },\n        height: { min: 480, ideal: 720, max: 1080 },\n      },\n    };\n    // width: 1280, height: 720  -- preference only\n    // facingMode: {exact: \"user\"}\n    // facingMode: \"environment\"\n\n    // handle older browsers that might implement getUserMedia in some way\n    if (navigator.mediaDevices === undefined) {\n      navigator.mediaDevices = {};\n      navigator.mediaDevices.getUserMedia = function (constraintObj) {\n        let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        if (!getUserMedia) {\n          return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n        }\n        return new Promise(function (resolve, reject) {\n          getUserMedia.call(navigator, constraintObj, resolve, reject);\n        });\n      };\n    } else {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then((devices) => {\n          devices.forEach((device) => {\n            console.log(device.kind.toUpperCase(), device.label);\n            //, device.deviceId\n          });\n        })\n        .catch((err) => {\n          console.log(err.name, err.message);\n          let error = `Error Name : ${err.name} , Error Message : ${err.message}`;\n          setErrorMessage(error);\n        });\n    }\n\n    // To access the camera and mic\n    navigator.mediaDevices\n      .getUserMedia(constraintObj)\n      .then(function (mediaStreamObj) {\n        //connect the media stream to the first video element\n        let video = document.querySelector('video');\n        if ('srcObject' in video) {\n          video.srcObject = mediaStreamObj;\n          setVideoStarted(true);\n          // console.log('started');\n        } else {\n          //old version\n          video.src = window.URL.createObjectURL(mediaStreamObj);\n          setVideoStarted(true);\n          // console.log('started');\n        }\n\n        video.onloadedmetadata = function (ev) {\n          //show in the video element what is being captured by the webcam\n          video.play();\n        };\n\n        //add listeners for saving video/audio\n        let start = document.getElementById('btnstart');\n        let stop = document.getElementById('btnstop');\n        let pause = document.getElementById('btnpause');\n        let resume = document.getElementById('btnresume');\n        // let vidSave = document.getElementById('vid2');\n        let mediaRecorder = new MediaRecorder(mediaStreamObj);\n        let chunks = [];\n\n        start.addEventListener('click', (ev) => {\n          console.log(mediaRecorder.state);\n          mediaRecorder.start();\n        });\n        stop.addEventListener('click', (ev) => {\n          mediaRecorder.stop();\n          console.log(mediaRecorder.state);\n        });\n\n        pause.addEventListener('click', (ev) => {\n          console.log('paused click');\n          mediaRecorder.pause();\n          // if (MediaRecorder.state === 'recording') {\n          //   mediaRecorder.pause();\n          //   // recording paused\n          // }\n          console.log(mediaRecorder.state);\n        });\n        resume.addEventListener('click', (ev) => {\n          console.log('resume click');\n          mediaRecorder.resume();\n          // if (MediaRecorder.state === 'paused') {\n          //   mediaRecorder.resume();\n          // }\n          // resume recording\n          console.log(mediaRecorder.state);\n        });\n\n        mediaRecorder.ondataavailable = function (ev) {\n          // on data available we are pushing that datas into the chunks\n          chunks.push(ev.data);\n        };\n        mediaRecorder.onstop = (chunks) => {\n          // var blob = new Blob(chunks, { type: 'video/mp4;' });\n          // console.log('chunks', chunks);\n          // chunks = [];\n          \n          // To convert the blob into base 64 string using file Reader and storing it into the\n          // recorded chunks\n          var reader = new FileReader();\n          reader.readAsDataURL(chunks);\n          reader.onload = function () {\n            var base64data = reader.result;\n            console.log(base64data);\n            setRecordedChunks(base64data);\n          };\n\n          mediaStreamObj.getTracks().forEach(function (track) {\n            track.stop();\n          });\n        };\n      })\n      .catch(function (err) {\n        // console.log(err.name, err.message);\n        let error = `Error Name : ${err.name}, Error Message : ${err.message}`;\n        setErrorMessage(error);\n      });\n\n    return () => {};\n  }, []);\n  const recordStopHandle = () => {\n    // var currentTime = new Date().getTime();\n    // var interval = currentTime - timeWhenVideoStarted;\n    console.log('interval,intervalWhilePaused', interval, intervalWhilePaused);\n    // If it is paused then resumed add the paused time and next slide change time together\n    if (pausedAndResumed) {\n      var currentTime = new Date().getTime();\n      console.log('stop interval', stopInterval);\n      var interval = currentTime - previousSlideEndTime;\n      console.log(\n        'check values,interval,stopInterval,timeArray.length',\n        interval,\n        stopInterval,\n        timeArray.length,\n      );\n      // var number = timeArray.length;\n      interval = interval + stopInterval;\n\n      console.log('interval while paused[0]', intervalWhilePaused.length, interval);\n      \n      console.log('intervalWhilePaused', intervalWhilePaused);\n\n      // var newTime = intervalWhilePaused + interval;\n      // converting time into '00:00:00' format\n      function msToTime(duration) {\n        var milliseconds = parseInt((duration % 1000) / 100),\n          seconds = Math.floor((duration / 1000) % 60),\n          minutes = Math.floor((duration / (1000 * 60)) % 60),\n          hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n        hours = hours < 10 ? '0' + hours : hours;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n\n        return hours + ':' + minutes + ':' + seconds;\n      }\n      console.log('intervalWhilePaused in seconds', msToTime(intervalWhilePaused));\n      var nextTime = msToTime(interval);\n      console.log('Time Array in paused,next time', timeArray, nextTime);\n      setTimeArray((prevState) => prevState.concat(nextTime));\n      // setPaused(false);\n    } else {\n      console.log('This is running');\n      // For every other slide changes\n      var currentTime = new Date().getTime();\n      var interval = currentTime - startingTime;\n      // converting time in minutes and seconds\n      function msToTime(duration) {\n        var milliseconds = parseInt((duration % 1000) / 100),\n          seconds = Math.floor((duration / 1000) % 60),\n          minutes = Math.floor((duration / (1000 * 60)) % 60),\n          hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n        hours = hours < 10 ? '0' + hours : hours;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n\n        return hours + ':' + minutes + ':' + seconds;\n      }\n      var newTime = msToTime(interval);\n      console.log('Time', interval, newTime);\n      setTimeArray((prevState) => prevState.concat(newTime));\n      console.log('Time Array', timeArray);\n    }\n    // Assigning current time as video started time\n    // settimeWhenVideoStarted(currentTime);\n    console.log('difference', interval);\n    console.log('TimeArray', timeArray);\n    const element1 = document.getElementById('link');\n    console.log('clicked');\n    element1.click();\n  };\n  return (\n    <div className='video_page'>\n      <div className='top_content_photo'>\n        <Link to='/impressent' className='redirect_title'>\n          <p className='impressent_top_file'>impressent</p>\n        </Link>\n        <Link to='/impressent/photo' className='link_back'>\n          <p className='back_key'>Go back</p>\n        </Link>\n      </div>\n      <div className='container'>\n        <div className='video_center'>\n          <p className='record_video'>Record Video</p>\n          <div className='vectors'>\n            <img className='vector' src={Vector1} alt='' />\n            <img className='vector' src={Vector4} alt='' />\n            <img className='vector' src={Vector2} alt='' />\n            <img className='vector' src={Vector5} alt='' />\n            <img className='vector' src={Vector3} alt='' />\n          </div>\n\n          <div className='video_div'>\n            <div>\n              {!errorMessage ? (\n                <video muted className='video_webcam'></video>\n              ) : (\n                <p className='error_msg'>{errorMessage}</p>\n              )}\n            </div>\n            <div className='slides_div mx-auto'>\n              {/* passing the props to slideshow component */}\n              <SlideShow\n                images={images}\n                buttonText={buttonText}\n                timeWhenVideoStarted={timeWhenVideoStarted}\n                settimeWhenVideoStarted={settimeWhenVideoStarted}\n                timeArray={timeArray}\n                setTimeArray={setTimeArray}\n                slideRef={slideRef}\n                imageRef={imageRef}\n                imgArray={imgArray}\n                setImgArray={setImgArray}\n                slideChange={slideChange}\n                slideArrayCheck={slideArrayCheck}\n                setSlideArrayCheck={setSlideArrayCheck}\n                pauseImg={pauseImg}\n                imageNumber={imageNumber}\n                setImageNumber={setImageNumber}\n                slideImageHandler={slideImageHandler}\n                buttonText={buttonText}\n              />\n            </div>\n          </div>\n          <div className='video_lower'>\n            <div className={videoStarted ? 'video_button_div' : 'd-none'}>\n              <div className='btn_div'>\n                <button\n                  id='btnstart'\n                  className={buttonText === 'record' ? 'record_btn' : 'd-none'}\n                  onClick={(e) => record_btnHandle()}\n                >\n                  Record\n                </button>\n              </div>\n              {!errorMessage ? (\n                <div className='btn_div'>\n                  <button\n                    id='btnpause'\n                    className={buttonText === 'pause' ? 'record_btn' : 'd-none'}\n                    onClick={(e) => pauseBtnHandle()}\n                  >\n                    Pause\n                  </button>\n                </div>\n              ) : null}\n            </div>\n            <div className={buttonText === 'procced' ? 'resumeProcced' : 'd-none'}>\n              <div className='btn_div'>\n                <button\n                  id='btnresume'\n                  className='record_btn res_procced'\n                  onClick={(e) => resumeHandle()}\n                >\n                  Resume\n                </button>\n              </div>\n              <div className='btn_div'>\n                <button\n                  id='btnstop'\n                  className='record_btn res_procced proceed_bg link record_btn proceed_margin'\n                  onClick={(e) => recordStopHandle()}\n                >\n                  Proceed\n                </button>\n              </div>\n              <Link to='/impressent/review' id='link' className='d-none'></Link>\n            </div>\n\n            {/* <button\n          onClick={() =>\n            console.log(\n              'time,Image array,intervalWhilePaused',\n              timeArray,\n              imgArray,\n              intervalWhilePaused,\n            )\n          }\n        >\n          Time Array\n        </button> */}\n\n            {/* <button onClick={() => console.log(` Interval Array  Image Array `, imgArray, timeArray)}>\n          Show Img array and interval arr\n        </button>\n        {imgArray.map((image, index) => (\n          <div key={index}>\n            <img src={image} alt='' height='95' width='171' />\n          </div>\n        ))} */}\n            {/* <button onClick={() => console.log(imgArray)}>Show Imagearray</button> */}\n            <div className={errorMessage ? 'margin_footer' : null}>\n              <div className='footer_record_div d-flex justify-content-center d-flex align-items-center'>\n                <footer className='footer_record'>© Copyright 2020</footer>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecordVideo;\n\n// npm install react-webcam\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\CaptureImage.js",["248","249","250","251"],"import React from 'react';\nimport DataApi from '../utils/DataApi';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport '../css/captureImageView.css';\nfunction CaptureImage(props) {\n  const { recordedChunks, images, setRecordedChunks, setImages } = React.useContext(DataApi);\n  const handleTakePhoto = (dataUri) => {\n    // Do stuff with the photo...\n    setImages((prevState) => prevState.concat(dataUri));\n    console.log(images);\n  };\n  return (\n    <div>\n      <Camera\n        className='camera_capture_img'\n        onTakePhoto={(dataUri) => {\n          handleTakePhoto(dataUri);\n        }}\n      />\n\n      {props.capture ? (\n        <div className='done_btn_div'>\n          <button className='done_btn' onClick={() => props.setCapture(false)}>\n            Done\n          </button>\n        </div>\n      ) : (\n        <Link to='/capturedView' className='link capture_procced'>\n          <p className='proceed_photo'>Proceed</p>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default CaptureImage;\n","C:\\Users\\samru\\Desktop\\apsel_m-impressent-8b50376e0ca9\\src\\components\\TextError.js",[],{"ruleId":"252","severity":1,"message":"253","line":6,"column":32,"nodeType":"254","messageId":"255","endLine":6,"endColumn":36},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"252","severity":1,"message":"260","line":2,"column":27,"nodeType":"254","messageId":"255","endLine":2,"endColumn":36},{"ruleId":"252","severity":1,"message":"261","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":6,"column":50,"nodeType":"254","messageId":"255","endLine":6,"endColumn":54},{"ruleId":"252","severity":1,"message":"262","line":38,"column":9,"nodeType":"254","messageId":"255","endLine":38,"endColumn":24},{"ruleId":"252","severity":1,"message":"263","line":39,"column":9,"nodeType":"254","messageId":"255","endLine":39,"endColumn":22},{"ruleId":"252","severity":1,"message":"264","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":34},{"ruleId":"252","severity":1,"message":"265","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":18},{"ruleId":"252","severity":1,"message":"266","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":18},{"ruleId":"252","severity":1,"message":"267","line":5,"column":27,"nodeType":"254","messageId":"255","endLine":5,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":5,"column":35,"nodeType":"254","messageId":"255","endLine":5,"endColumn":40},{"ruleId":"252","severity":1,"message":"269","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":22},{"ruleId":"252","severity":1,"message":"270","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":15},{"ruleId":"252","severity":1,"message":"267","line":3,"column":27,"nodeType":"254","messageId":"255","endLine":3,"endColumn":33},{"ruleId":"252","severity":1,"message":"253","line":3,"column":50,"nodeType":"254","messageId":"255","endLine":3,"endColumn":54},{"ruleId":"252","severity":1,"message":"271","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":19},{"ruleId":"252","severity":1,"message":"265","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":18},{"ruleId":"252","severity":1,"message":"272","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":9},{"ruleId":"252","severity":1,"message":"267","line":9,"column":27,"nodeType":"254","messageId":"255","endLine":9,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":9,"column":35,"nodeType":"254","messageId":"255","endLine":9,"endColumn":40},{"ruleId":"252","severity":1,"message":"273","line":9,"column":48,"nodeType":"254","messageId":"255","endLine":9,"endColumn":56},{"ruleId":"252","severity":1,"message":"269","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":22},{"ruleId":"252","severity":1,"message":"267","line":4,"column":27,"nodeType":"254","messageId":"255","endLine":4,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":4,"column":35,"nodeType":"254","messageId":"255","endLine":4,"endColumn":40},{"ruleId":"252","severity":1,"message":"266","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":18},{"ruleId":"252","severity":1,"message":"265","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":18},{"ruleId":"252","severity":1,"message":"274","line":13,"column":8,"nodeType":"254","messageId":"255","endLine":13,"endColumn":18},{"ruleId":"252","severity":1,"message":"275","line":15,"column":8,"nodeType":"254","messageId":"255","endLine":15,"endColumn":20},{"ruleId":"252","severity":1,"message":"276","line":21,"column":11,"nodeType":"254","messageId":"255","endLine":21,"endColumn":25},{"ruleId":"252","severity":1,"message":"277","line":21,"column":35,"nodeType":"254","messageId":"255","endLine":21,"endColumn":52},{"ruleId":"252","severity":1,"message":"260","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"264","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":34},{"ruleId":"252","severity":1,"message":"267","line":4,"column":27,"nodeType":"254","messageId":"255","endLine":4,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":4,"column":35,"nodeType":"254","messageId":"255","endLine":4,"endColumn":40},{"ruleId":"252","severity":1,"message":"266","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":18},{"ruleId":"252","severity":1,"message":"265","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":18},{"ruleId":"252","severity":1,"message":"274","line":13,"column":8,"nodeType":"254","messageId":"255","endLine":13,"endColumn":18},{"ruleId":"252","severity":1,"message":"276","line":18,"column":11,"nodeType":"254","messageId":"255","endLine":18,"endColumn":25},{"ruleId":"252","severity":1,"message":"277","line":18,"column":35,"nodeType":"254","messageId":"255","endLine":18,"endColumn":52},{"ruleId":"252","severity":1,"message":"278","line":26,"column":9,"nodeType":"254","messageId":"255","endLine":26,"endColumn":16},{"ruleId":"252","severity":1,"message":"265","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":18},{"ruleId":"252","severity":1,"message":"279","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":17},{"ruleId":"252","severity":1,"message":"280","line":8,"column":8,"nodeType":"254","messageId":"255","endLine":8,"endColumn":21},{"ruleId":"252","severity":1,"message":"281","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":15},{"ruleId":"252","severity":1,"message":"282","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":17},{"ruleId":"252","severity":1,"message":"272","line":12,"column":8,"nodeType":"254","messageId":"255","endLine":12,"endColumn":9},{"ruleId":"252","severity":1,"message":"283","line":13,"column":8,"nodeType":"254","messageId":"255","endLine":13,"endColumn":14},{"ruleId":"252","severity":1,"message":"267","line":16,"column":27,"nodeType":"254","messageId":"255","endLine":16,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":16,"column":35,"nodeType":"254","messageId":"255","endLine":16,"endColumn":40},{"ruleId":"252","severity":1,"message":"273","line":16,"column":48,"nodeType":"254","messageId":"255","endLine":16,"endColumn":56},{"ruleId":"252","severity":1,"message":"275","line":17,"column":8,"nodeType":"254","messageId":"255","endLine":17,"endColumn":20},{"ruleId":"252","severity":1,"message":"284","line":18,"column":8,"nodeType":"254","messageId":"255","endLine":18,"endColumn":27},{"ruleId":"252","severity":1,"message":"281","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":15},{"ruleId":"252","severity":1,"message":"285","line":9,"column":11,"nodeType":"254","messageId":"255","endLine":9,"endColumn":22},{"ruleId":"252","severity":1,"message":"260","line":1,"column":45,"nodeType":"254","messageId":"255","endLine":1,"endColumn":54},{"ruleId":"252","severity":1,"message":"283","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":16},{"ruleId":"252","severity":1,"message":"267","line":3,"column":27,"nodeType":"254","messageId":"255","endLine":3,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":3,"column":35,"nodeType":"254","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"252","severity":1,"message":"273","line":3,"column":48,"nodeType":"254","messageId":"255","endLine":3,"endColumn":56},{"ruleId":"252","severity":1,"message":"260","line":154,"column":45,"nodeType":"254","messageId":"255","endLine":154,"endColumn":54},{"ruleId":"252","severity":1,"message":"283","line":155,"column":10,"nodeType":"254","messageId":"255","endLine":155,"endColumn":16},{"ruleId":"252","severity":1,"message":"267","line":156,"column":27,"nodeType":"254","messageId":"255","endLine":156,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":156,"column":35,"nodeType":"254","messageId":"255","endLine":156,"endColumn":40},{"ruleId":"252","severity":1,"message":"253","line":156,"column":42,"nodeType":"254","messageId":"255","endLine":156,"endColumn":46},{"ruleId":"252","severity":1,"message":"273","line":156,"column":48,"nodeType":"254","messageId":"255","endLine":156,"endColumn":56},{"ruleId":"252","severity":1,"message":"260","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"267","line":3,"column":27,"nodeType":"254","messageId":"255","endLine":3,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":3,"column":35,"nodeType":"254","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"252","severity":1,"message":"286","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":20},{"ruleId":"252","severity":1,"message":"287","line":8,"column":8,"nodeType":"254","messageId":"255","endLine":8,"endColumn":18},{"ruleId":"252","severity":1,"message":"288","line":12,"column":10,"nodeType":"254","messageId":"255","endLine":12,"endColumn":26},{"ruleId":"252","severity":1,"message":"285","line":14,"column":37,"nodeType":"254","messageId":"255","endLine":14,"endColumn":48},{"ruleId":"289","severity":1,"message":"290","line":39,"column":22,"nodeType":"291","messageId":"292","endLine":39,"endColumn":24},{"ruleId":"252","severity":1,"message":"267","line":3,"column":27,"nodeType":"254","messageId":"255","endLine":3,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":3,"column":35,"nodeType":"254","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"252","severity":1,"message":"293","line":12,"column":10,"nodeType":"254","messageId":"255","endLine":12,"endColumn":16},{"ruleId":"252","severity":1,"message":"272","line":13,"column":8,"nodeType":"254","messageId":"255","endLine":13,"endColumn":9},{"ruleId":"252","severity":1,"message":"294","line":13,"column":13,"nodeType":"254","messageId":"255","endLine":13,"endColumn":17},{"ruleId":"252","severity":1,"message":"295","line":15,"column":45,"nodeType":"254","messageId":"255","endLine":15,"endColumn":55},{"ruleId":"252","severity":1,"message":"296","line":15,"column":57,"nodeType":"254","messageId":"255","endLine":15,"endColumn":66},{"ruleId":"252","severity":1,"message":"297","line":20,"column":8,"nodeType":"254","messageId":"255","endLine":20,"endColumn":20},{"ruleId":"252","severity":1,"message":"298","line":25,"column":5,"nodeType":"254","messageId":"255","endLine":25,"endColumn":11},{"ruleId":"252","severity":1,"message":"277","line":26,"column":5,"nodeType":"254","messageId":"255","endLine":26,"endColumn":22},{"ruleId":"252","severity":1,"message":"299","line":27,"column":5,"nodeType":"254","messageId":"255","endLine":27,"endColumn":14},{"ruleId":"252","severity":1,"message":"300","line":29,"column":5,"nodeType":"254","messageId":"255","endLine":29,"endColumn":16},{"ruleId":"252","severity":1,"message":"301","line":30,"column":5,"nodeType":"254","messageId":"255","endLine":30,"endColumn":17},{"ruleId":"252","severity":1,"message":"302","line":32,"column":5,"nodeType":"254","messageId":"255","endLine":32,"endColumn":19},{"ruleId":"252","severity":1,"message":"303","line":33,"column":5,"nodeType":"254","messageId":"255","endLine":33,"endColumn":22},{"ruleId":"252","severity":1,"message":"304","line":35,"column":5,"nodeType":"254","messageId":"255","endLine":35,"endColumn":17},{"ruleId":"252","severity":1,"message":"305","line":49,"column":10,"nodeType":"254","messageId":"255","endLine":49,"endColumn":19},{"ruleId":"252","severity":1,"message":"306","line":49,"column":21,"nodeType":"254","messageId":"255","endLine":49,"endColumn":33},{"ruleId":"252","severity":1,"message":"307","line":58,"column":25,"nodeType":"254","messageId":"255","endLine":58,"endColumn":41},{"ruleId":"252","severity":1,"message":"262","line":64,"column":10,"nodeType":"254","messageId":"255","endLine":64,"endColumn":25},{"ruleId":"252","severity":1,"message":"308","line":64,"column":27,"nodeType":"254","messageId":"255","endLine":64,"endColumn":45},{"ruleId":"252","severity":1,"message":"263","line":65,"column":10,"nodeType":"254","messageId":"255","endLine":65,"endColumn":23},{"ruleId":"252","severity":1,"message":"309","line":65,"column":25,"nodeType":"254","messageId":"255","endLine":65,"endColumn":41},{"ruleId":"252","severity":1,"message":"310","line":66,"column":10,"nodeType":"254","messageId":"255","endLine":66,"endColumn":21},{"ruleId":"252","severity":1,"message":"311","line":66,"column":23,"nodeType":"254","messageId":"255","endLine":66,"endColumn":37},{"ruleId":"252","severity":1,"message":"312","line":67,"column":10,"nodeType":"254","messageId":"255","endLine":67,"endColumn":23},{"ruleId":"252","severity":1,"message":"313","line":67,"column":25,"nodeType":"254","messageId":"255","endLine":67,"endColumn":41},{"ruleId":"252","severity":1,"message":"314","line":68,"column":19,"nodeType":"254","messageId":"255","endLine":68,"endColumn":29},{"ruleId":"315","severity":1,"message":"316","line":169,"column":6,"nodeType":"317","endLine":169,"endColumn":22,"suggestions":"318"},{"ruleId":"289","severity":1,"message":"290","line":177,"column":22,"nodeType":"291","messageId":"292","endLine":177,"endColumn":24},{"ruleId":"252","severity":1,"message":"319","line":12,"column":10,"nodeType":"254","messageId":"255","endLine":12,"endColumn":22},{"ruleId":"252","severity":1,"message":"320","line":12,"column":24,"nodeType":"254","messageId":"255","endLine":12,"endColumn":39},{"ruleId":"252","severity":1,"message":"321","line":13,"column":10,"nodeType":"254","messageId":"255","endLine":13,"endColumn":23},{"ruleId":"252","severity":1,"message":"322","line":13,"column":25,"nodeType":"254","messageId":"255","endLine":13,"endColumn":41},{"ruleId":"252","severity":1,"message":"276","line":16,"column":5,"nodeType":"254","messageId":"255","endLine":16,"endColumn":19},{"ruleId":"252","severity":1,"message":"277","line":18,"column":5,"nodeType":"254","messageId":"255","endLine":18,"endColumn":22},{"ruleId":"252","severity":1,"message":"299","line":19,"column":5,"nodeType":"254","messageId":"255","endLine":19,"endColumn":14},{"ruleId":"252","severity":1,"message":"323","line":20,"column":5,"nodeType":"254","messageId":"255","endLine":20,"endColumn":14},{"ruleId":"252","severity":1,"message":"301","line":21,"column":5,"nodeType":"254","messageId":"255","endLine":21,"endColumn":17},{"ruleId":"252","severity":1,"message":"324","line":26,"column":5,"nodeType":"254","messageId":"255","endLine":26,"endColumn":25},{"ruleId":"252","severity":1,"message":"325","line":27,"column":5,"nodeType":"254","messageId":"255","endLine":27,"endColumn":28},{"ruleId":"252","severity":1,"message":"326","line":28,"column":5,"nodeType":"254","messageId":"255","endLine":28,"endColumn":14},{"ruleId":"252","severity":1,"message":"304","line":29,"column":5,"nodeType":"254","messageId":"255","endLine":29,"endColumn":17},{"ruleId":"252","severity":1,"message":"327","line":30,"column":5,"nodeType":"254","messageId":"255","endLine":30,"endColumn":13},{"ruleId":"252","severity":1,"message":"328","line":32,"column":5,"nodeType":"254","messageId":"255","endLine":32,"endColumn":13},{"ruleId":"252","severity":1,"message":"329","line":34,"column":5,"nodeType":"254","messageId":"255","endLine":34,"endColumn":16},{"ruleId":"252","severity":1,"message":"330","line":35,"column":5,"nodeType":"254","messageId":"255","endLine":35,"endColumn":23},{"ruleId":"252","severity":1,"message":"331","line":37,"column":5,"nodeType":"254","messageId":"255","endLine":37,"endColumn":16},{"ruleId":"252","severity":1,"message":"332","line":38,"column":5,"nodeType":"254","messageId":"255","endLine":38,"endColumn":19},{"ruleId":"252","severity":1,"message":"333","line":72,"column":9,"nodeType":"254","messageId":"255","endLine":72,"endColumn":21},{"ruleId":"252","severity":1,"message":"334","line":15,"column":10,"nodeType":"254","messageId":"255","endLine":15,"endColumn":18},{"ruleId":"252","severity":1,"message":"335","line":16,"column":10,"nodeType":"254","messageId":"255","endLine":16,"endColumn":17},{"ruleId":"252","severity":1,"message":"276","line":25,"column":5,"nodeType":"254","messageId":"255","endLine":25,"endColumn":19},{"ruleId":"252","severity":1,"message":"299","line":28,"column":5,"nodeType":"254","messageId":"255","endLine":28,"endColumn":14},{"ruleId":"252","severity":1,"message":"336","line":41,"column":20,"nodeType":"254","messageId":"255","endLine":41,"endColumn":31},{"ruleId":"252","severity":1,"message":"337","line":47,"column":10,"nodeType":"254","messageId":"255","endLine":47,"endColumn":17},{"ruleId":"252","severity":1,"message":"338","line":47,"column":19,"nodeType":"254","messageId":"255","endLine":47,"endColumn":29},{"ruleId":"252","severity":1,"message":"339","line":53,"column":10,"nodeType":"254","messageId":"255","endLine":53,"endColumn":22},{"ruleId":"252","severity":1,"message":"340","line":53,"column":24,"nodeType":"254","messageId":"255","endLine":53,"endColumn":39},{"ruleId":"252","severity":1,"message":"341","line":55,"column":9,"nodeType":"254","messageId":"255","endLine":55,"endColumn":20},{"ruleId":"342","severity":1,"message":"343","line":130,"column":13,"nodeType":"254","messageId":"344","endLine":130,"endColumn":24},{"ruleId":"342","severity":1,"message":"345","line":132,"column":13,"nodeType":"254","messageId":"344","endLine":132,"endColumn":21},{"ruleId":"289","severity":1,"message":"290","line":138,"column":40,"nodeType":"291","messageId":"292","endLine":138,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":141,"column":40,"nodeType":"291","messageId":"292","endLine":141,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":144,"column":40,"nodeType":"291","messageId":"292","endLine":144,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":147,"column":40,"nodeType":"291","messageId":"292","endLine":147,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":150,"column":40,"nodeType":"291","messageId":"292","endLine":150,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":153,"column":40,"nodeType":"291","messageId":"292","endLine":153,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":156,"column":40,"nodeType":"291","messageId":"292","endLine":156,"endColumn":42},{"ruleId":"252","severity":1,"message":"346","line":165,"column":15,"nodeType":"254","messageId":"255","endLine":165,"endColumn":27},{"ruleId":"252","severity":1,"message":"346","line":184,"column":15,"nodeType":"254","messageId":"255","endLine":184,"endColumn":27},{"ruleId":"315","severity":1,"message":"347","line":368,"column":6,"nodeType":"317","endLine":368,"endColumn":8,"suggestions":"348"},{"ruleId":"349","severity":1,"message":"350","line":372,"column":49,"nodeType":"254","messageId":"351","endLine":372,"endColumn":57},{"ruleId":"252","severity":1,"message":"346","line":394,"column":13,"nodeType":"254","messageId":"255","endLine":394,"endColumn":25},{"ruleId":"342","severity":1,"message":"343","line":413,"column":11,"nodeType":"254","messageId":"344","endLine":413,"endColumn":22},{"ruleId":"342","severity":1,"message":"345","line":414,"column":11,"nodeType":"254","messageId":"344","endLine":414,"endColumn":19},{"ruleId":"252","severity":1,"message":"346","line":417,"column":13,"nodeType":"254","messageId":"255","endLine":417,"endColumn":25},{"ruleId":"352","severity":1,"message":"353","line":490,"column":17,"nodeType":"354","endLine":490,"endColumn":40},{"ruleId":"252","severity":1,"message":"267","line":3,"column":27,"nodeType":"254","messageId":"255","endLine":3,"endColumn":33},{"ruleId":"252","severity":1,"message":"268","line":3,"column":35,"nodeType":"254","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"252","severity":1,"message":"276","line":8,"column":11,"nodeType":"254","messageId":"255","endLine":8,"endColumn":25},{"ruleId":"252","severity":1,"message":"277","line":8,"column":35,"nodeType":"254","messageId":"255","endLine":8,"endColumn":52},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["355"],"no-negated-in-lhs",["356"],"'useEffect' is defined but never used.","'Routes' is defined but never used.","'currentPathname' is assigned a value but never used.","'currentSearch' is assigned a value but never used.","'useRef' is defined but never used.","'Rectangle9' is defined but never used.","'Rectangle1' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'ImageUploading' is defined but never used.","'DataApi' is defined but never used.","'RecordVideo' is defined but never used.","'$' is defined but never used.","'Redirect' is defined but never used.","'DeleteIcon' is defined but never used.","'CaptureImage' is defined but never used.","'recordedChunks' is assigned a value but never used.","'setRecordedChunks' is assigned a value but never used.","'options' is assigned a value but never used.","'VectorAdd' is defined but never used.","'CameraAltIcon' is defined but never used.","'Vector1' is defined but never used.","'ClearIcon' is defined but never used.","'Camera' is defined but never used.","'MobileCameraCapture' is defined but never used.","'setShareUrl' is assigned a value but never used.","'WhatsAppIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'ShowChartRounded' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Player' is defined but never used.","'data' is defined but never used.","'FieldArray' is defined but never used.","'FastField' is defined but never used.","'workerClient' is defined but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'setImgArray' is assigned a value but never used.","'setImageName' is assigned a value but never used.","'imageSlideTime' is assigned a value but never used.","'setImageSlideTime' is assigned a value but never used.","'setTimeArray' is assigned a value but never used.","'imageSend' is assigned a value but never used.","'setimageSend' is assigned a value but never used.","'setInitialValues' is assigned a value but never used.","'setCurrentPathname' is assigned a value but never used.","'setCurrentSearch' is assigned a value but never used.","'ffmpegReady' is assigned a value but never used.","'setFfmpegReady' is assigned a value but never used.","'stdOutputText' is assigned a value but never used.","'setstdOutputText' is assigned a value but never used.","'setDataGot' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'imageName', 'imgArray', 'newImageSlideTime', 'reRun', 'setImageForRequest', 'setImageNameForRequest', 'timeArray', 'updateImageSlideTime', and 'videoName'. Either include them or remove the dependency array.","ArrayExpression",["357"],"'arrayReached' is assigned a value but never used.","'setArrayReached' is assigned a value but never used.","'slidesReached' is assigned a value but never used.","'setSlidesReached' is assigned a value but never used.","'imageName' is assigned a value but never used.","'timeWhenVideoStarted' is assigned a value but never used.","'settimeWhenVideoStarted' is assigned a value but never used.","'timeArray' is assigned a value but never used.","'imageRef' is assigned a value but never used.","'imgArray' is assigned a value but never used.","'slideChange' is assigned a value but never used.","'setSlideArrayCheck' is assigned a value but never used.","'imageNumber' is assigned a value but never used.","'setImageNumber' is assigned a value but never used.","'pauseHandler' is assigned a value but never used.","'videoSrc' is assigned a value but never used.","'message' is assigned a value but never used.","'setPauseImg' is assigned a value but never used.","'resumed' is assigned a value but never used.","'setResumed' is assigned a value but never used.","'videoFileGet' is assigned a value but never used.","'setvideoFileGet' is assigned a value but never used.","'doTranscode' is assigned a value but never used.","no-redeclare","'currentTime' is already defined.","redeclared","'interval' is already defined.","'milliseconds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'images', 'setImageName', 'setImgArray', 'setRecordedChunks', and 'setTimeArray'. Either include them or remove the dependency array.",["358"],"no-use-before-define","'interval' was used before it was defined.","usedBeforeDefined","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [imageName, imgArray, newImageSlideTime, reRun, recordedChunks, setImageForRequest, setImageNameForRequest, timeArray, updateImageSlideTime, videoName]",{"range":"363","text":"364"},"Update the dependencies array to be: [images, setImageName, setImgArray, setRecordedChunks, setTimeArray]",{"range":"365","text":"366"},[6369,6385],"[imageName, imgArray, newImageSlideTime, reRun, recordedChunks, setImageForRequest, setImageNameForRequest, timeArray, updateImageSlideTime, videoName]",[13592,13594],"[images, setImageName, setImgArray, setRecordedChunks, setTimeArray]"]